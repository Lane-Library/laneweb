pipeline: 

  code-analysis:
    image: aosapps/drone-sonar-plugin
    timeout: 20
    level: INFO
    showProfiling: true
    secrets: [sonar_host, sonar_token]

  build:
    image: gcr.io/som-laneweb/maven-grover:3.5.3
    commands:
      - mvn -B -q -s settings.xml package
    when:
      branch: master

  publish:
    image: plugins/docker
    registry: gcr.io
    repo: gcr.io/som-laneweb/laneweb
    tag:
      - latest
      - "${DRONE_COMMIT_SHA}"
    secrets: [ docker_username, docker_password ]
    when:
      status: success
      branch: master

  downstream:
    image: plugins/downstream
    server: https://ci.med.stanford.edu
    repositories:
      - irt-lane/kube-laneweb
    fork: true
    wait: true
    secrets: [ downstream_token ]
    when:
      status: success

  slack:
    image: plugins/slack
    channel: irt-dcs-cicd
    username: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME}
    template: |
      *Build ${DRONE_BUILD_NUMBER}*: _*{{ build.status }}*_ on event _*${DRONE_BUILD_EVENT}*_
      *Author*: ${CI_COMMIT_AUTHOR_NAME}
      *<${DRONE_BUILD_LINK}|Build logs>* *<${DRONE_REPO_LINK}/commit/${DRONE_COMMIT_SHA}|Code changes>* *<https://sonarqube.med.stanford.edu/dashboard?id=${DRONE_REPO_OWNER}:${DRONE_REPO_NAME}|Code qulity>* 
      *Message*: ${DRONE_COMMIT_MESSAGE}
    secrets: [ slack_webhook ]
    when:
      status: [ success, failure ]

