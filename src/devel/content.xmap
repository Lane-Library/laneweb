<?xml version="1.0"?>
<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://apache.org/cocoon/sitemap/1.0 http://cocoon.apache.org/schema/sitemap/cocoon-sitemap-1.0.xsd">
    <map:pipelines>
        <map:pipeline type="noncaching">
            <map:match pattern="eresources/**" type="wildcard">
                <map:mount uri-prefix="eresources" check-reload="yes" src="eresources.xmap"/>
            </map:match>
            <map:match pattern="online/(ej|db|cc|eb)browse.html" type="regex">
                <map:select type="resource-exists">
                    <map:when test="content/online/{1}browse.html">
                        <map:generate type="html" src="content/online/{1}browse.html"/>
                    </map:when>
                    <map:otherwise>
                        <map:generate type="html" src="{naming:java:comp/env/live-base}/content/online/{1}browse.html"/>
                    </map:otherwise>
                </map:select>
                <map:transform type="xinclude"/>
                <map:select type="resource-exists">
                    <map:when test="xsl/search-post.xsl">
                        <map:transform type="saxon" src="xsl/search-post.xsl"/>
                    </map:when>
                    <map:otherwise>
                        <map:transform type="saxon" src="context://xsl/search-post.xsl"/>
                    </map:otherwise>
                </map:select>
                <map:serialize type="xml"/>
            </map:match>
            <map:match pattern="search.html" type="wildcard">
                <map:match type="regex-parameter" pattern="^(clinical|peds|research|pharmacy|history|test)$">
                    <map:parameter name="parameter-name" value="source"/>
                    <map:select type="resource-exists">
                        <map:when test="content/search/{request-param:source}.html">
                            <map:aggregate element="doc">
                                <map:part src="cocoon://apps/search-application"/>
                                <map:part src="content/search/{request-param:source}.html"/>
                            </map:aggregate>
                        </map:when>
                        <map:otherwise>
                            <map:aggregate element="doc">
                                <map:part src="cocoon://apps/search-application"/>
                                <map:part src="cocoon:/search/{request-param:source}.html"/>
                            </map:aggregate>
                        </map:otherwise>
                    </map:select>
                    <map:transform type="xinclude"/>
                    <map:select type="resource-exists">
                        <map:when test="xsl/metasearch.xsl">
                            <map:transform type="saxon" src="xsl/metasearch.xsl">
                                <map:parameter name="query-string" value="{request:queryString}"/>
                                <map:parameter name="source" value="{request-param:source}"/>
                            </map:transform>
                        </map:when>
                        <map:otherwise>
                            <map:transform type="saxon" src="context://xsl/metasearch.xsl">
                                <map:parameter name="query-string" value="{request:queryString}"/>
                                <map:parameter name="source" value="{request-param:source}"/>
                            </map:transform>
                        </map:otherwise>
                    </map:select>
                    <map:serialize type="xml"/>
                </map:match>
                <map:match type="regex-parameter" pattern="^\/.+\.html$">
                    <map:parameter name="parameter-name" value="source"/>
                    <map:select type="resource-exists">
                        <map:when test="content{request-param:source}">
                            <map:aggregate element="doc">
                                <map:part src="cocoon://apps/search-application"/>
                                <map:part src="content{request-param:source}"/>
                            </map:aggregate>
                        </map:when>
                        <map:otherwise>
                            <map:aggregate element="doc">
                                <map:part src="cocoon://apps/search-application"/>
                                <map:part src="{naming:java:comp/env/live-base}/content{request-param:source}"/>
                            </map:aggregate>
                        </map:otherwise>
                    </map:select>
                    <map:transform type="xinclude"/>
                    <map:select type="resource-exists">
                        <map:when test="xsl/metasearch.xsl">
                            <map:transform type="saxon" src="xsl/metasearch.xsl">
                                <map:parameter name="query-string" value="{request:queryString}"/>
                            </map:transform>
                        </map:when>
                        <map:otherwise>
                            <map:transform type="saxon" src="context://xsl/metasearch.xsl">
                                <map:parameter name="query-string" value="{request:queryString}"/>
                            </map:transform>
                        </map:otherwise>
                    </map:select>
                    <map:serialize type="xml"/>
                </map:match>
                <map:match type="regex-parameter" pattern="^.+$">
                    <map:parameter name="parameter-name" value="source"/>
                    <map:select type="resource-exists">
                        <map:when test="content/search.html">
                            <map:aggregate element="doc">
                                <map:part src="cocoon://apps/search-application"/>
                                <map:part src="cocoon:/eresources/count"/>
                                <map:part src="content/search.html"/>
                                <map:part src="cocoon:/search/{request-param:source}.html"/>
                            </map:aggregate>
                        </map:when>
                        <map:otherwise>
                            <map:aggregate element="doc">
                                <map:part src="cocoon://apps/search-application"/>
                                <map:part src="cocoon:/eresources/count"/>
                                <map:part src="{naming:java:comp/env/live-base}/content/search.html"/>
                                <map:part src="cocoon:/search/{request-param:source}.html"/>
                            </map:aggregate>
                        </map:otherwise>
                    </map:select>
                    <map:select type="resource-exists">
                        <map:when test="xsl/search.xsl">
                            <map:transform type="saxon" src="xsl/search.xsl">
                                <map:parameter name="q" value="{request-param:q}"/>
                                <map:parameter name="source" value="{request-param:source}"/>
                            </map:transform>
                        </map:when>
                        <map:otherwise>
                            <map:transform type="saxon" src="context://xsl/search.xsl">
                                <map:parameter name="q" value="{request-param:q}"/>
                                <map:parameter name="source" value="{request-param:source}"/>
                            </map:transform>
                        </map:otherwise>
                    </map:select>
                    <map:transform type="xinclude"/>
                    <map:select type="resource-exists">
                        <map:when test="xsl/search-post.xsl">
                            <map:transform type="saxon" src="xsl/search-post.xsl"/>
                        </map:when>
                        <map:otherwise>
                            <map:transform type="saxon" src="context://xsl/search-post.xsl"/>
                        </map:otherwise>
                    </map:select>
                    <map:serialize type="xml"/>
                </map:match>
            </map:match>
            <map:match pattern="search/**.html" type="wildcard">
                <map:generate type="file" src="cocoon:/search-templates/{1}.html"/>
                <map:select type="resource-exists">
                    <map:when test="xsl/search.xsl">
                        <map:transform type="saxon" src="xsl/search.xsl">
                            <map:parameter name="q" value="{request-param:q}"/>
                            <map:parameter name="source" value="{request-param:source}"/>
                        </map:transform>
                    </map:when>
                    <map:otherwise>
                        <map:transform type="saxon" src="context://xsl/search.xsl">
                            <map:parameter name="q" value="{request-param:q}"/>
                            <map:parameter name="source" value="{request-param:source}"/>
                        </map:transform>
                    </map:otherwise>
                </map:select>
                <map:transform type="xinclude"/>
                <map:select type="resource-exists">
                    <map:when test="xsl/search-post.xsl">
                        <map:transform type="saxon" src="xsl/search-post.xsl"/>
                    </map:when>
                    <map:otherwise>
                        <map:transform type="saxon" src="context://xsl/search-post.xsl"/>
                    </map:otherwise>
                </map:select>
                <map:serialize type="xml"/>
            </map:match>
            <map:match pattern="search-tab-results">
                <map:aggregate element="search-tab-results" >
                    <map:part src="cocoon://apps/search-application"/>  
                    <map:part src="cocoon:/search-templates.xml"/>
                </map:aggregate>
                <map:select type="resource-exists">
                    <map:when test="xsl/search-tab-results.xsl">
                        <map:transform type="saxon" src="xsl/search-tab-results.xsl">
                            <map:parameter name="source" value="{request-param:source}"/>
                        </map:transform>
                    </map:when>
                    <map:otherwise>
                        <map:transform type="saxon" src="context://xsl/search-tab-results.xsl">
                            <map:parameter name="source" value="{request-param:source}"/>
                        </map:transform>
                    </map:otherwise>
                </map:select>
                <map:serialize type="text"/>
            </map:match>
            <map:match pattern="sfx">
                <map:generate type="html"
                    src="http://sfx.stanford.edu/local?sid=stanford:laneweb&amp;genre=journal&amp;sfx.ignore_date_threshold=1&amp;title={urlencode:{request-param:q}}&amp;sfx.title_search=exact"/>
                <map:transform type="saxon" src="context://xsl/sfx.xsl">
                    <map:parameter name="sfx-request"
                        value="http://sfx.stanford.edu/local?sid=stanford:laneweb&amp;genre=journal&amp;sfx.ignore_date_threshold=1&amp;title={urlencode:{request-param:q}}&amp;sfx.title_search=exact&amp;svc.fulltext=yes"
                    />
                </map:transform>
                <map:serialize type="xml"/>
            </map:match>
            <map:match pattern="random" type="wildcard">
                <map:generate type="file" src="{request-param:source}"/>
                <map:select type="resource-exists">
                    <map:when test="xsl/random.xsl">
                        <map:transform type="saxon" src="xsl/random.xsl"/>
                    </map:when>
                    <map:otherwise>
                        <map:transform type="saxon" src="context://xsl/random.xsl"/>
                    </map:otherwise>
                </map:select>
                <map:serialize type="xhtml"/>
            </map:match>
            <map:match pattern="howto/index.html" type="wildcard">
                <map:generate type="file" src="cocoon://content/lane-faq/lane-faq-all.html"/>
                <map:select type="resource-exists">
                    <map:when test="xsl/faq.xsl">
                        <map:transform type="saxon" src="xsl/faq.xsl">
                            <map:parameter name="id" value="{request-param:id}"/>
                            <map:parameter name="category" value="{request-param:category}"/>
                            <map:parameter name="mode" value="{request-param:mode}"/>
                        </map:transform>
                    </map:when>
                    <map:otherwise>
                        <map:transform type="saxon" src="context://xsl/faq.xsl">
                            <map:parameter name="id" value="{request-param:id}"/>
                            <map:parameter name="category" value="{request-param:category}"/>
                            <map:parameter name="mode" value="{request-param:mode}"/>
                        </map:transform>
                    </map:otherwise>
                </map:select>
                <map:transform type="xinclude"/>
                <map:serialize type="xml"/>
            </map:match>
            <map:match pattern="faq-category-list.html">
                <map:generate type="file" src="cocoon://content/lane-faq/lane-faq-all.html"/>
                <map:select type="resource-exists">
                    <map:when test="xsl/faq=category-list.xsl">
                        <map:transform type="saxon" src="xsl/faq-category-list.xsl">
                            <map:parameter name="category" value="{request-param:category}"/>
                        </map:transform>
                    </map:when>
                    <map:otherwise>
                        <map:transform type="saxon" src="context://xsl/faq-category-list.xsl">
                            <map:parameter name="category" value="{request-param:category}"/>
                        </map:transform>
                    </map:otherwise>
                </map:select>
                <map:serialize type="xml"/>
            </map:match>
            <map:match pattern="search-templates.xml" type="wildcard">
                <map:aggregate element="search-templates" ns="http://lane.stanford.edu/search-templates/ns">
                   <map:part src="cocoon:/search-templates/clinical.html"/>
                    <map:part src="cocoon:/search-templates/peds.html"/>
                    <map:part src="cocoon:/search-templates/research.html"/>
                    <map:part src="cocoon:/search-templates/history.html"/>
                </map:aggregate>
                <map:select type="resource-exists">
                    <map:when test="xsl/search-templates.xsl">
                        <map:transform type="saxon" src="xsl/search-templates.xsl"/>
                    </map:when>
                    <map:otherwise>
                        <map:transform type="saxon" src="context://xsl/search-templates.xsl"/>
                    </map:otherwise>
                </map:select>
                <map:serialize type="xml"/>
            </map:match>
            
            <map:match pattern="search-templates/**.html" type="wildcard">
            	 <map:select type="resource-exists">
                    <map:when test="content/search/{1}.html">
                        <map:generate type="file" src="content/search/{1}.html"/>
                    </map:when>
                    <map:otherwise>
                        <map:generate type="file" src="{naming:java:comp/env/live-base}/content/search/{1}.html"/>
                    </map:otherwise>
                </map:select>
                <map:serialize type="xml"/>
            </map:match>
                
          
            
            <map:match pattern="templates/**.xml" type="wildcard">
                <map:select type="resource-exists">
                    <map:when test="resources/templates/{1}.xml">
                        <map:generate type="file" src="resources/templates/{1}.xml"/>
                    </map:when>
                    <map:otherwise>
                        <map:generate type="file" src="{naming:java:comp/env/live-base}/resources/templates/{1}.xml"/>
                    </map:otherwise>
                </map:select>
                <map:serialize type="xml"/>
            </map:match>
            <map:match pattern="**" type="wildcard">
                <map:select type="resource-exists">
                    <map:when test="content/{1}">
                        <map:generate type="html" src="content/{1}"/>
                    </map:when>
                    <map:otherwise>
                        <map:generate type="html" src="{naming:java:comp/env/live-base}/content/{1}"/>
                    </map:otherwise>
                </map:select>
                <map:transform type="xinclude"/>
                <map:select type="resource-exists">
                    <map:when test="xsl/rss2html.xsl">
                        <map:transform type="saxon" src="xsl/rss2html.xsl"/>
                    </map:when>
                    <map:otherwise>
                        <map:transform type="saxon" src="context://xsl/rss2html.xsl"/>
                    </map:otherwise>
                </map:select>
                <map:serialize type="xml"/>
            </map:match>
        </map:pipeline>
    </map:pipelines>
</map:sitemap>
