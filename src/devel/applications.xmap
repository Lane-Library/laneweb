<?xml version="1.0" encoding="UTF-8"?>
<!-- this is the devel applications.xmap -->
<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://apache.org/cocoon/sitemap/1.0 http://cocoon.apache.org/schema/sitemap/cocoon-sitemap-1.0.xsd">
    <map:pipelines>
        <map:pipeline type="noncaching">
            <map:match pattern="url-tester" type="wildcard">
                <map:read type="search-url-tester"/>
            </map:match>
            <map:match pattern="search/**" type="wildcard">
                <!-- /apps/search/xml returns the xmlized search result -->
                <map:match type="wildcard" pattern="search/xml">
                     <map:generate type="search"/>
                    <map:serialize type="xml"/>
                </map:match>
                <map:match pattern="search/engine/xml" type="wildcard">
                    <map:generate type="search-engine"/>
                    <map:serialize type="xml"/>
                </map:match>
                <map:match pattern="search/resource/xml" type="wildcard">
                    <map:generate type="search-resource"/>
                    <map:serialize type="xml"/>
                </map:match>
                <!-- search/ranked/xml returns xmlized content results -->
                <map:match pattern="search/ranked/xml" type="wildcard">
                    <map:generate type="search-engine">
                        <map:parameter name="synchronous" value="true"/>
                        <map:parameter name="timeout" value="20000"/>
                    </map:generate>
                    <map:select type="resource-exists">
                        <map:when test="xsl/search-content-ranked.xsl">
                            <map:transform type="saxon" src="xsl/search-content-ranked.xsl">
                                <map:parameter name="query" value="${query}"/>
                                <map:parameter name="limit" value="10"/>
                            </map:transform>
                        </map:when>
                        <map:otherwise>
                            <map:transform type="saxon" src="${resources-base}/xsl/search-content-ranked.xsl">
                                <map:parameter name="query" value="${query}"/>
                                <map:parameter name="limit" value="10"/>
                            </map:transform>
                        </map:otherwise>
                    </map:select>
                    <map:serialize type="xml"/>
                </map:match>
                <!-- search2json.xsl converts the result xml to json -->
                <map:match pattern="search/json" type="wildcard">
                    <map:generate type="search-resource"/>
                    <map:select type="resource-exists">
                        <map:when test="xsl/search2json.xsl">
                            <map:transform type="saxon" src="xsl/search2json.xsl">
                                <map:parameter name="content" value="${content}"/>
                                <map:parameter name="content-to-display" value="5"/>
                            </map:transform>
                        </map:when>
                        <map:otherwise>
                            <map:transform type="saxon" src="${resources-base}/xsl/search2json.xsl">
                                <map:parameter name="content" value="${content}"/>
                                <map:parameter name="content-to-display" value="5"/>
                            </map:transform>
                        </map:otherwise>
                    </map:select>
                    <map:serialize type="text"/>
                </map:match>
                <!-- result with proxy links (if necessary) in xml format -->
                <map:match pattern="search/proxy/xml" type="wildcard">
                    <map:generate type="search"/>
                    <map:transform type="search-cme-links"/>
                    <map:transform type="search-proxy-links">
                        <map:parameter name="base-path" value="${base-path}/your-sunetid"/>
                    </map:transform>
                    <map:serialize type="xml"/>
                </map:match>
                <!-- result with proxy links (if necessary) in json format -->
                <map:match pattern="search/proxy/json" type="wildcard">
                    <map:generate type="file" src="cocoon:/search/resource/proxy/xml"/>
                    <map:select type="resource-exists">
                        <map:when test="xsl/search2json.xsl">
                            <map:transform type="saxon" src="xsl/search2json.xsl">
                                <map:parameter name="content" value="${content}"/>
                                <map:parameter name="content-to-display" value="5"/>
                            </map:transform>
                        </map:when>
                        <map:otherwise>
                            <map:transform type="saxon" src="${resources-base}/xsl/search2json.xsl">
                                <map:parameter name="content" value="${content}"/>
                                <map:parameter name="content-to-display" value="5"/>
                            </map:transform>
                        </map:otherwise>
                    </map:select>
                    <map:serialize type="text"/>
                </map:match>
                <!-- search facet counts -->
                <map:match pattern="search/facets/json" type="wildcard">
                    <map:aggregate element="search-facet-counts">
                        <map:part src="cocoon:/cache/search/templates/xml"/>
                    </map:aggregate>
                    <map:select type="resource-exists">
                        <map:when test="xsl/search-facet-counts.xsl">
                            <map:transform type="saxon" src="xsl/search-facet-counts.xsl">
                                <map:parameter name="facets" value="${facets}"/>
                            </map:transform>
                        </map:when>
                        <map:otherwise>
                            <map:transform type="saxon" src="xsl/search-facet-counts.xsl">
                                <map:parameter name="facets" value="${facets}"/>
                            </map:transform>
                        </map:otherwise>
                    </map:select>
                    <map:serialize type="text"/>
                </map:match>
                <!-- search describe xml output -->
                <map:match pattern="search/describe/xml" type="wildcard">
                    <map:generate type="search-describe"/>
                    <map:serialize type="xml"/>
                </map:match>
                <!-- search describe html output -->
                <map:match pattern="search/describe/html" type="wildcard">
                    <map:aggregate element="portals" ns="http://lane.stanford.edu/describe/ns">
                        <map:part src="cocoon:/search/describe/xml"/>
                        <map:part src="cocoon:/cache/search/templates/xml"/>
                    </map:aggregate>
                    <map:select type="resource-exists">
                        <map:when test="xsl/describe.xsl">
                            <map:transform type="saxon" src="xsl/describe.xsl"/>
                        </map:when>
                        <map:otherwise>
                            <map:transform type="saxon" src="${resources-base}/xsl/describe.xsl"/>
                        </map:otherwise>
                    </map:select>
                    <map:serialize type="xhtml"/>
                </map:match>
                <map:match pattern="search/clearcache" type="wildcard">
                    <map:act type="search-cache-manager"/>
                    <map:read type="resource" src="robots.txt" mime-type="text/plain"/>
                </map:match>
            </map:match>
            <map:match pattern="querymap/*" type="wildcard">
                <map:match pattern="querymap/xml" type="wildcard">
                    <map:select type="resource-exists">
                        <map:when test="resources/querymap/resource-maps.xml">
                            <map:generate type="querymap">
                                <map:parameter name="resource-maps"
                                    value="resources/querymap/resource-maps.xml"/>
                                <map:parameter name="descriptor-weights"
                                    value="resources/querymap/descriptor-weights.xml"/>
                                <map:parameter name="abstract-count" value="100"/>
                            </map:generate>
                        </map:when>
                        <map:otherwise>
                            <map:generate type="querymap">
                                <map:parameter name="resource-maps"
                                    value="${live-base}/resources/querymap/resource-maps.xml"/>
                                <map:parameter name="descriptor-weights"
                                    value="${live-base}/resources/querymap/descriptor-weights.xml"/>
                                <map:parameter name="abstract-count" value="100"/>
                            </map:generate>
                        </map:otherwise>
                    </map:select>
                    <map:serialize type="xml"/>
                </map:match>
                <map:match pattern="querymap/html" type="wildcard">
                    <map:select type="resource-exists">
                        <map:when test="resources/querymap/display-template.xml">
                            <map:aggregate element="laneweb"
                                ns="http://lane.stanford.edu/laneweb/ns">
                                <map:part src="cocoon:/querymap/xml"/>
                                <map:part src="resources/querymap/display-template.xml"/>
                            </map:aggregate>
                        </map:when>
                        <map:otherwise>
                            <map:aggregate element="laneweb"
                                ns="http://lane.stanford.edu/laneweb/ns">
                                <map:part src="cocoon:/querymap/xml"/>
                                <map:part
                                    src="${live-base}/resources/querymap/display-template.xml"
                                />
                            </map:aggregate>
                        </map:otherwise>
                    </map:select>
                    <map:select type="resource-exists">
                        <map:when test="xsl/querymap2html.xsl">
                            <map:transform type="saxon" src="xsl/querymap2html.xsl"/>
                        </map:when>
                        <map:otherwise>
                            <map:transform type="saxon" src="${resources-base}/xsl/querymap2html.xsl"/>
                        </map:otherwise>
                    </map:select>
                    <map:serialize type="xml"/>
                </map:match>
                <map:match pattern="querymap/json" type="wildcard">
                    <map:read type="querymap"/>
                </map:match>
            </map:match>
            <map:match pattern="spellcheck/*" type="wildcard">
                <map:match pattern="spellcheck/xml" type="wildcard">
                    <map:generate type="spellcheck"/>
                    <map:serialize type="xml"/>
                </map:match>
                <map:match pattern="spellcheck/json" type="wildcard">
                    <map:generate type="spellcheck"/>
                    <map:select type="resource-exists">
                        <map:when test="xsl/spellcheck2json.xsl">
                            <map:transform type="saxon" src="xsl/spellcheck2json.xsl"/>
                        </map:when>
                        <map:otherwise>
                            <map:transform src="${resources-base}/xsl/spellcheck2json.xsl" type="saxon"/>
                        </map:otherwise>
                    </map:select>
                    <map:serialize type="text"/>
                </map:match>
            </map:match>
            <map:match pattern="sfx/*" type="wildcard">
                <map:match pattern="sfx/json" type="wildcard">
                    <map:generate type="html"
                        src="http://sfx.stanford.edu/local?sid=stanford:laneweb&amp;genre=journal&amp;sfx.ignore_date_threshold=1&amp;title=${url-encoded-query}&amp;sfx.title_search=exact&amp;sfx.directlink=off"/>
                    <map:select type="resource-exists">
                        <map:when test="xsl/sfx2json.xsl">
                            <map:transform src="xsl/sfx2json.xsl" type="saxon">
                                <map:parameter name="sfx-request"
                                    value="http://sfx.stanford.edu/local?sid=stanford:laneweb&amp;genre=journal&amp;sfx.ignore_date_threshold=1&amp;title=${url-encoded-query}&amp;sfx.title_search=exact"
                                />
                            </map:transform>
                        </map:when>
                        <map:otherwise>
                            <map:transform src="${resources-base}/xsl/sfx2json.xsl" type="saxon">
                                <map:parameter name="sfx-request"
                                    value="http://sfx.stanford.edu/local?sid=stanford:laneweb&amp;genre=journal&amp;sfx.ignore_date_threshold=1&amp;title=${url-encoded-query}&amp;sfx.title_search=exact&amp;svc.fulltext=yes"
                                />
                            </map:transform>
                        </map:otherwise>
                    </map:select>
                    <map:serialize type="text"/>
                </map:match>
                <map:match pattern="sfx/highly-accessed2rss" type="wildcard">
                    <map:generate
                        src="http://sfx.stanford.edu/local/cgi/public/get_file.cgi?file=highly-accessed.xml"
                        type="file"/>
                    <map:select type="resource-exists">
                        <map:when test="xsl/sfx-highly-accessed2rss.xsl">
                            <map:transform src="xsl/sfx-highly-accessed2rss.xsl" type="saxon"/>
                        </map:when>
                        <map:otherwise>
                            <map:transform src="${resources-base}/xsl/sfx-highly-accessed2rss.xsl"
                                type="saxon"/>
                        </map:otherwise>
                    </map:select>
                    <map:serialize type="xml"/>
                </map:match>
            </map:match>
            <map:match pattern="cache/search/templates/xml" type="wildcard">
                <map:aggregate element="search-templates"
                    ns="http://lane.stanford.edu/search-templates/ns">
                    <map:part src="cocoon:/cache/search/articles/articles-all.html"/>
                    <map:part src="cocoon:/cache/search/articles/articles-pubmed.html"/>
                    <map:part src="cocoon:/cache/search/articles/articles-pubmed_clinicaltrial.html"/>
                    <map:part src="cocoon:/cache/search/articles/articles-pubmed_systematicreviews.html"/>
                    <map:part src="cocoon:/cache/search/articles/articles-uptodate.html"/>
                    <map:part src="cocoon:/cache/search/catalog/catalog-lois.html"/>
                    <map:part src="cocoon:/cache/search/clinical/clinical-aafp_patients.html"/>
                    <map:part src="cocoon:/cache/search/clinical/clinical-acpjc.html"/>
                    <map:part src="cocoon:/cache/search/clinical/clinical-all.html"/>
                    <map:part src="cocoon:/cache/search/clinical/clinical-bmj_clinical_evidence.html"/>
                    <map:part src="cocoon:/cache/search/clinical/clinical-cro_clineguide.html"/>
                    <map:part src="cocoon:/cache/search/clinical/clinical-dare.html"/>
                    <map:part src="cocoon:/cache/search/clinical/clinical-emedicine.html"/>
                    <map:part src="cocoon:/cache/search/clinical/clinical-evidence.html"/>
                    <map:part src="cocoon:/cache/search/clinical/clinical-foundational.html"/>
                    <map:part src="cocoon:/cache/search/clinical/clinical-medlineplus_0.html"/>
                    <map:part src="cocoon:/cache/search/clinical/clinical-patient.html"/>
                    <map:part src="cocoon:/cache/search/clinical/clinical-pubmed.html"/>
                    <map:part src="cocoon:/cache/search/clinical/clinical-pubmed_clinicaltrial.html"/>
                    <map:part src="cocoon:/cache/search/clinical/clinical-pubmed_cochrane_reviews.html"/>
                    <map:part src="cocoon:/cache/search/clinical/clinical-pubmed_diagnosis_focused.html"/>
                    <map:part src="cocoon:/cache/search/clinical/clinical-pubmed_epidemiology_focused.html"/>
                    <map:part src="cocoon:/cache/search/clinical/clinical-pubmed_etiology_focused.html"/>
                    <map:part src="cocoon:/cache/search/clinical/clinical-pubmed_guidelines.html"/>
                    <map:part src="cocoon:/cache/search/clinical/clinical-pubmed_harm_focused.html"/>
                    <map:part src="cocoon:/cache/search/clinical/clinical-pubmed_prognosis_focused.html"/>
                    <map:part src="cocoon:/cache/search/clinical/clinical-pubmed_rct.html"/>
                    <map:part src="cocoon:/cache/search/clinical/clinical-pubmed_recent_reviews.html"/>
                    <map:part src="cocoon:/cache/search/clinical/clinical-pubmed_systematicreviews.html"/>
                    <map:part src="cocoon:/cache/search/clinical/clinical-pubmed_treatment_focused.html"/>
                    <map:part src="cocoon:/cache/search/clinical/clinical-uptodate.html"/>
                    <map:part src="cocoon:/cache/search/specialty/specialty-all.html"/>
                    <map:part src="cocoon:/cache/search/specialty/specialty-anesthesia.html"/>
                    <map:part src="cocoon:/cache/search/specialty/specialty-bioresearch.html"/>
                    <map:part src="cocoon:/cache/search/specialty/specialty-cardiology.html"/>
                    <map:part src="cocoon:/cache/search/specialty/specialty-clinical.html"/>
                    <map:part src="cocoon:/cache/search/specialty/specialty-emergency.html"/>
                    <map:part src="cocoon:/cache/search/specialty/specialty-hematology.html"/>
                    <map:part src="cocoon:/cache/search/specialty/specialty-internal-medicine.html"/>
                    <map:part src="cocoon:/cache/search/specialty/specialty-pediatrics.html"/>
                    <map:part src="cocoon:/cache/search/specialty/specialty-pharmacy.html"/>
                    <map:part src="cocoon:/cache/search/specialty/specialty-pulmonary.html"/>
                </map:aggregate>
                <map:select type="resource-exists">
                    <map:when test="xsl/search-templates.xsl">
                        <map:transform src="xsl/search-templates.xsl" type="saxon"/>
                    </map:when>
                    <map:otherwise>
                        <map:transform type="saxon" src="${resources-base}/xsl/search-templates.xsl"/>
                    </map:otherwise>
                </map:select>
                <map:serialize type="xml"/>
            </map:match>
            <!-- use html generator for sources -->
            <map:match pattern="cache/**.html" type="wildcard">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.html">
                        <map:generate src="content/{1}.html" type="html"/>
                    </map:when>
                    <map:otherwise>
                        <map:generate src="${content-base}/{1}.html" type="html"/>
                    </map:otherwise>
                </map:select>
                <map:serialize type="xml"/>
            </map:match>
            <map:handle-errors>
                <map:generate type="exception"/>
                <map:serialize type="xml" status-code="500"/>
            </map:handle-errors>
        </map:pipeline>
        <map:pipeline type="throttling">
            <map:parameter name="request-key"
                value="${remote-addr}/${request-uri}/${query-string}"/>
            <map:match pattern="suggest/json" type="wildcard">
                <map:read type="suggest"/>
            </map:match>
        </map:pipeline>
    </map:pipelines>
</map:sitemap>
