<?xml version="1.0" encoding="UTF-8"?>
<!-- this is the devel rss.xmap -->
<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://apache.org/cocoon/sitemap/1.0 http://cocoon.apache.org/schema/sitemap/cocoon-sitemap-1.0.xsd">
    <map:pipelines>
        <map:pipeline type="noncaching">
            <map:match pattern="eresources/**" type="wildcard">
                <map:mount uri-prefix="eresources" check-reload="no" src="eresources.xmap"/>
            </map:match>
            <map:match pattern="content/**" type="wildcard">
                <map:mount uri-prefix="content" check-reload="no" src="content.xmap"/>
            </map:match>
            <map:match pattern="apps/**" type="wildcard">
                <map:mount uri-prefix="apps" check-reload="no" src="applications.xmap"/>
            </map:match>
            <map:match pattern="services/tools/highly-accessed-articles.xml" type="wildcard">
                <map:generate src="cocoon:/apps/sfx/highly-accessed2rss" type="file"/>
                <map:serialize type="xml"/>
            </map:match>
            <map:match pattern="eresources" type="wildcard">
                <map:generate type="er-search"/>
                <map:select type="resource-exists">
                    <map:when test="/xsl/eresources-rss.xsl">
                        <map:transform type="saxon" src="/xsl/eresources-rss.xsl">
                            <map:parameter name="query" value="${query}"/>
                            <map:parameter name="type" value="${type}"/>
                            <map:parameter name="mode" value="search"/>
                        </map:transform>
                    </map:when>
                    <map:otherwise>
                        <map:transform type="saxon" src="context://xsl/eresources-rss.xsl">
                            <map:parameter name="query" value="${query}"/>
                            <map:parameter name="type" value="${type}"/>
                            <map:parameter name="mode" value="search"/>
                        </map:transform>
                    </map:otherwise>
                </map:select>
                <map:serialize type="xml"/>
            </map:match>
            <map:match pattern="browse" type="wildcard">
                <map:generate type="er-browse"/>
                <map:select type="resource-exists">
                    <map:when test="/xsl/eresources-rss.xsl">
                        <map:transform type="saxon" src="/xsl/eresources-rss.xsl">
                            <map:parameter name="alpha" value="${alpha}"/>
                            <map:parameter name="type" value="${type}"/>
                        </map:transform>
                    </map:when>
                    <map:otherwise>
                        <map:transform type="saxon" src="context://xsl/eresources-rss.xsl">
                            <map:parameter name="alpha" value="${alpha}"/>
                            <map:parameter name="type" value="${type}"/>
                        </map:transform>
                    </map:otherwise>
                </map:select>
                <map:serialize type="xml"/>
            </map:match>
            <map:match pattern="mesh" type="wildcard">
                <map:generate type="er-mesh">
                    <map:parameter name="mesh" value="${mesh}"/>
                </map:generate>
                <map:select type="resource-exists">
                    <map:when test="/xsl/eresources-rss.xsl">
                        <map:transform type="saxon" src="/xsl/eresources-rss.xsl">
                            <map:parameter name="mesh" value="${mesh}"/>
                            <map:parameter name="type" value="${type}"/>
                        </map:transform>
                    </map:when>
                    <map:otherwise>
                        <map:transform type="saxon" src="context://xsl/eresources-rss.xsl">
                            <map:parameter name="mesh" value="${mesh}"/>
                            <map:parameter name="type" value="${type}"/>
                        </map:transform>
                    </map:otherwise>
                </map:select>
                <map:serialize type="xml"/>
            </map:match>
            <map:match pattern="**.xml" type="wildcard">
                <map:select type="resource-exists">
                    <map:when test="content/rss/{1}.xml">
                        <map:generate type="file" src="content/rss/{1}.xml"/>
                    </map:when>
                    <map:otherwise>
                        <map:generate type="file" src="${live-base}/content/rss/{1}.xml"/>
                    </map:otherwise>
                </map:select>
                <map:serialize type="xml"/>
            </map:match>
            <map:match pattern="page2rss" type="wildcard">
                <map:aggregate element="doc">
                    <map:part src="cocoon:/content/${page}"/>
                    <map:part src="cocoon:/content/file-info${page}"/>
                </map:aggregate>
                <map:select type="resource-exists">
                    <map:when test="/xsl/page2rss.xsl">
                        <map:transform src="/xsl/page2rss.xsl" type="saxon">
                            <map:parameter name="page" value="${page}"/>
                        </map:transform>
                    </map:when>
                    <map:otherwise>
                        <map:transform src="context://xsl/page2rss.xsl" type="saxon">
                            <map:parameter name="page" value="${page}"/>
                        </map:transform>
                    </map:otherwise>
                </map:select>
                <map:serialize type="xml"/>
            </map:match>
        </map:pipeline>
    </map:pipelines>
</map:sitemap>
