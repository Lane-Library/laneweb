<?xml version="1.0"?>
<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">
    <map:pipelines>
        <map:pipeline type="noncaching">
            <map:match type="wildcard" pattern="images/**.gif">
                <map:select type="resource-exists">
                    <map:when test="resources/images/{1}.gif">
                        <map:read type="resource" src="resources/images/{1}.gif" mime-type="image/gif"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{defaults:live-base}/resources/images/{1}.gif" mime-type="image/gif"/>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match type="wildcard" pattern="style/*.css">
                <map:select type="resource-exists">
                    <map:when test="resources/css/{1}.css">
                        <map:read type="txt-resource" src="resources/css/{1}.css">
                            <map:parameter name="path" value="{request:contextPath}/your-sunet-id"/>
                        </map:read>
                    </map:when>
                    <map:otherwise>
                        <map:read type="txt-resource" src="{defaults:live-base}/resources/css/{1}.css">
                            <map:parameter name="path" value="{request:contextPath}/your-sunet-id"/>
                        </map:read>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match type="wildcard" pattern="javascript/*.js">
                <map:select type="resource-exists">
                    <map:when test="resources/javascript/{1}.js">
                        <map:read type="txt-resource" src="resources/javascript/{1}.js"
                            mime-type="application/x-javascript">
                            <map:parameter name="path" value="{request:contextPath}/your-sunet-id"/>
                        </map:read>
                    </map:when>
                    <map:otherwise>
                        <map:read type="txt-resource" src="context://javascript/{1}.js"
                            mime-type="application/x-javascript">
                            <map:parameter name="path" value="{request:contextPath}/your-sunet-id"/>
                        </map:read>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match type="wildcard" pattern="images/**.jpg">
                <map:select type="resource-exists">
                    <map:when test="resources/images/{1}.jpg">
                        <map:read type="resource" src="resources/images/{1}.jpg" mime-type="image/jpeg"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{defaults:live-base}/resources/images/{1}.jpg" mime-type="image/jpeg"/>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match type="wildcard" pattern="images/**.png">
                <map:select type="resource-exists">
                    <map:when test="resources/images/{1}.png">
                        <map:read type="resource" src="resources/images/{1}.jpg" mime-type="image/png"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{defaults:live-base}/resources/images/{1}.jpg" mime-type="image/png"/>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match type="wildcard" pattern="pdf/**.pdf">
                <map:select type="resource-exists">
                    <map:when test="resources/pdf/{1}.pdf">
                        <map:read type="resource" src="resources/pdf/{1}.pdf"
                            mime-type="application/pdf">
                            <map:parameter name="byte-ranges" value="false"/>
                        </map:read>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{defaults:live-base}/resources/pdf/{1}.pdf"
                            mime-type="application/pdf">
                            <map:parameter name="byte-ranges" value="false"/>
                        </map:read>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match type="wildcard" pattern="**.gif">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.gif">
                        <map:read type="resource" src="content/{1}.gif" mime-type="image/gif"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{defaults:live-base}/content/{1}.gif" mime-type="image/gif"/>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match type="wildcard" pattern="**.jpg">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.jpg">
                        <map:read type="resource" src="content/{1}.jpg" mime-type="image/jpeg"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{defaults:live-base}/content/{1}.jpg" mime-type="image/jpeg"/>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match type="wildcard" pattern="**.pdf">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.pdf">
                        <map:read type="resource" src="content/{1}.pdf" mime-type="application/pdf">
                            <map:parameter name="byte-ranges" value="false"/>
                        </map:read>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{defaults:live-base}/content/{1}.pdf" mime-type="application/pdf">
                            <map:parameter name="byte-ranges" value="false"/>
                        </map:read>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match type="wildcard" pattern="**.png">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.png">
                        <map:read type="resource" src="content/{1}.png" mime-type="image/png"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{defaults:live-base}/content/{1}.png" mime-type="image/png"/>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match type="wildcard" pattern="**.eps">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.eps">
                        <map:read type="resource" src="content/{1}.eps" mime-type="application/postscript"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{defaults:live-base}/content/{1}.eps" mime-type="application/postscript"/>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match type="wildcard" pattern="**.ai">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.ai">
                        <map:read type="resource" src="content/{1}.ai" mime-type="application/illustrator"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{defaults:live-base}/content/{1}.ai" mime-type="application/illustrator"/>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match type="wildcard" pattern="**.psd">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.ai">
                        <map:read type="resource" src="content/{1}.psd" mime-type="application/photoshop"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{defaults:live-base}/content/{1}.psd" mime-type="application/photoshop"/>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match type="wildcard" pattern="**.rm">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.rm">
                        <map:read type="resource" src="content/{1}.rm" mime-type="audio/x-pn-realaudio"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{defaults:live-base}/content/{1}.rm" mime-type="audio/x-pn-realaudio"/>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match type="wildcard" pattern="**.ram">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.ram">
                    </map:when>
                    <map:otherwise>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match type="wildcard" pattern="**.camv">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.camv">
                        <map:read type="resource" src="content/{1}.ram" mime-type="audio/x-pn-realaudio"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{defaults:live-base}/content/{1}.ram" mime-type="audio/x-pn-realaudio"/>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match type="wildcard" pattern="**.smil">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.smil">
                        <map:read type="resource" src="content/{1}.smil" mime-type="application/smil"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{defaults:live-base}/content/{1}.smil" mime-type="application/smil"/>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match type="wildcard" pattern="**.xls">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.xls">
                        <map:read type="resource" src="content/{1}.xls" mime-type="application/vnd.ms-excel"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{defaults:live-base}/content/{1}.xls" mime-type="application/vnd.ms-excel"/>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match type="wildcard" pattern="**.doc">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.doc">
                        <map:read type="resource" src="content/{1}.doc" mime-type="application/msword"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{defaults:live-base}/content/{1}.doc" mime-type="application/msword"/>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match type="wildcard" pattern="**.dot">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.dot">
                        <map:read type="resource" src="content/{1}.dot" mime-type="application/msword"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{defaults:live-base}/content/{1}.dot" mime-type="application/msword"/>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match type="wildcard" pattern="**.swf">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.swf">
                        <map:read type="resource" src="content/{1}.swf" mime-type="application/x-shockwave-flash"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{defaults:live-base}/content/{1}.swf" mime-type="application/x-shockwave-flash"/>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match type="wildcard" pattern="**.wmv">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.wmv">
                        <map:read type="resource" src="content/{1}.wmv" mime-type="audio/x-ms-wmv"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{defaults:live-base}/content/{1}.wmv" mime-type="audio/x-ms-wmv"/>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match type="wildcard" pattern="**.ppt">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.ppt">
                        <map:read type="resource" src="content/{1}.ppt" mime-type="application/vnd.ms-powerpoint"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{defaults:live-base}/content/{1}.ppt" mime-type="application/vnd.ms-powerpoint"/>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match type="wildcard" pattern="**.avi">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.avi">
                        <map:read type="resource" src="content/{1}.avi" mime-type="video/x-msvideo"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{defaults:live-base}/content/{1}.avi" mime-type="video/x-msvideo"/>
                    </map:otherwise>
                </map:select>
            </map:match>
        </map:pipeline>
    </map:pipelines>
</map:sitemap>
