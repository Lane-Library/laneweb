<?xml version="1.0"?>
<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://apache.org/cocoon/sitemap/1.0 http://cocoon.apache.org/schema/sitemap/cocoon-sitemap-1.0.xsd">
    <map:pipelines>
        <map:pipeline type="noncaching">
            <map:match pattern="images/**" type="wildcard">
                <map:select type="resource-exists">
                    <map:when test="resources/images/{1}">
                        <map:read type="resource" src="resources/images/{1}"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{naming:java:comp/env/live-base}/resources/images/{1}"/>
                    </map:otherwise>
                </map:select>
            </map:match>
            <!-- first wildcard will be version for local css and javascript -->
            <map:match pattern="style/**.css" type="wildcard">
                <map:select type="resource-exists">
                    <map:when test="resources/css/{1}.css">
                        <map:read type="txt-resource" src="resources/css/{1}.css">
                            <map:parameter name="path" value="/your-sunet-id"/>
                        </map:read>
                    </map:when>
                    <map:otherwise>
                        <map:read type="txt-resource" src="context://resources/css/{1}.css">
                            <map:parameter name="path" value="/your-sunet-id"/>
                        </map:read>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match pattern="javascript/**.js" type="wildcard">
                <map:select type="resource-exists">
                    <map:when test="resources/javascript/{1}.js">
                        <map:read type="txt-resource" src="resources/javascript/{1}.js">
                            <map:parameter name="path" value="/your-sunet-id"/>
                        </map:read>
                    </map:when>
                    <map:otherwise>
                        <map:read type="txt-resource" src="context://javascript/{1}.js">
                            <map:parameter name="path" value="/your-sunet-id"/>
                        </map:read>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match pattern="**.gif" type="wildcard">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.gif">
                        <map:read type="resource" src="content/{1}.gif"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{naming:java:comp/env/live-base}/content/{1}.gif"/>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match pattern="**.jpg" type="wildcard">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.jpg">
                        <map:read type="resource" src="content/{1}.jpg"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{naming:java:comp/env/live-base}/content/{1}.jpg"/>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match pattern="**.pdf" type="wildcard">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.pdf">
                        <map:read type="resource" src="content/{1}.pdf">
                            <map:parameter name="byte-ranges" value="false"/>
                        </map:read>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{naming:java:comp/env/live-base}/content/{1}.pdf">
                            <map:parameter name="byte-ranges" value="false"/>
                        </map:read>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match pattern="**.png" type="wildcard">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.png">
                        <map:read type="resource" src="content/{1}.png"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{naming:java:comp/env/live-base}/content/{1}.png"/>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match pattern="**.eps" type="wildcard">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.eps">
                        <map:read type="resource" src="content/{1}.eps"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{naming:java:comp/env/live-base}/content/{1}.eps"/>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match pattern="**.ai" type="wildcard">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.ai">
                        <map:read type="resource" src="content/{1}.ai"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{naming:java:comp/env/live-base}/content/{1}.ai"/>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match pattern="**.psd" type="wildcard">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.ai">
                        <map:read type="resource" src="content/{1}.psd"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{naming:java:comp/env/live-base}/content/{1}.psd"/>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match pattern="**.rm" type="wildcard">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.rm">
                        <map:read type="resource" src="content/{1}.rm"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{naming:java:comp/env/live-base}/content/{1}.rm"/>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match pattern="**.ram" type="wildcard">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.ram">
                    </map:when>
                    <map:otherwise>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match pattern="**.camv" type="wildcard">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.camv">
                        <map:read type="resource" src="content/{1}.ram"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{naming:java:comp/env/live-base}/content/{1}.ram"/>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match pattern="**.smil" type="wildcard">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.smil">
                        <map:read type="resource" src="content/{1}.smil"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{naming:java:comp/env/live-base}/content/{1}.smil"/>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match pattern="**.xls" type="wildcard">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.xls">
                        <map:read type="resource" src="content/{1}.xls"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{naming:java:comp/env/live-base}/content/{1}.xls"/>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match pattern="**.doc" type="wildcard">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.doc">
                        <map:read type="resource" src="content/{1}.doc"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{naming:java:comp/env/live-base}/content/{1}.doc"/>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match pattern="**.dot" type="wildcard">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.dot">
                        <map:read type="resource" src="content/{1}.dot"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{naming:java:comp/env/live-base}/content/{1}.dot"/>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match pattern="**.swf" type="wildcard">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.swf">
                        <map:read type="resource" src="content/{1}.swf"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{naming:java:comp/env/live-base}/content/{1}.swf"/>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match pattern="**.wmv" type="wildcard">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.wmv">
                        <map:read type="resource" src="content/{1}.wmv"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{naming:java:comp/env/live-base}/content/{1}.wmv"/>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match pattern="**.ppt" type="wildcard">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.ppt">
                        <map:read type="resource" src="content/{1}.ppt"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{naming:java:comp/env/live-base}/content/{1}.ppt"/>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match pattern="**.pptx" type="wildcard">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.pptx">
                        <map:read type="resource" src="content/{1}.pptx"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{naming:java:comp/env/live-base}/content/{1}.pptx"/>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match pattern="**.avi" type="wildcard">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.avi">
                        <map:read type="resource" src="content/{1}.avi"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{naming:java:comp/env/live-base}/content/{1}.avi"/>
                    </map:otherwise>
                </map:select>
            </map:match>
            <map:match pattern="**.zip" type="wildcard">
                <map:select type="resource-exists">
                    <map:when test="content/{1}.zip">
                        <map:read type="resource" src="content/{1}.zip"/>
                    </map:when>
                    <map:otherwise>
                        <map:read type="resource" src="{naming:java:comp/env/live-base}/content/{1}.zip"/>
                    </map:otherwise>
                </map:select>
            </map:match>
        </map:pipeline>
    </map:pipelines>
</map:sitemap>
