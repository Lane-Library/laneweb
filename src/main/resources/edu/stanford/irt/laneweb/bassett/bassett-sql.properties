browse.region=\
SELECT ERESOURCE.ERESOURCE_ID, VERSION.VERSION_ID, LINK_ID, TYPE,  TITLE, PUBLISHER, HOLDINGS, \
PROXY, LABEL, URL, B.BASSETT_ID, B.BASSETT_NUMBER, B.IMAGE, B.DIAGRAM, B.LATIN_LEGEND, B.ENGLISH_LEGEND, B.DESCRIPTION AS BASSETT_DESCRIPTION, BR.REGION, BR.SUB_REGION \
FROM ERESOURCE, VERSION, LINK, TYPE,  BASSETT B, BASSETT_REGION BR WHERE ERESOURCE.ERESOURCE_ID = VERSION.ERESOURCE_ID   AND ERESOURCE.RECORD_ID = B.RECORD_ID \
AND B.BASSETT_ID = BR.BASSETT_ID AND VERSION.VERSION_ID = LINK.VERSION_ID AND ERESOURCE.ERESOURCE_ID = TYPE.ERESOURCE_ID \
AND TYPE = 'bassett'  AND BR.REGION = ? ORDER BY B.BASSETT_NUMBER 

browse.subregion=\
SELECT ERESOURCE.ERESOURCE_ID, VERSION.VERSION_ID, LINK_ID, TYPE,  TITLE, PUBLISHER, HOLDINGS, \
PROXY, LABEL, URL, B.BASSETT_ID, B.BASSETT_NUMBER, B.IMAGE, B.DIAGRAM, B.LATIN_LEGEND, B.ENGLISH_LEGEND, B.DESCRIPTION AS BASSETT_DESCRIPTION, BR.REGION, BR.SUB_REGION \
FROM ERESOURCE, VERSION, LINK, TYPE,  BASSETT B, BASSETT_REGION BR WHERE ERESOURCE.ERESOURCE_ID = VERSION.ERESOURCE_ID   AND ERESOURCE.RECORD_ID = B.RECORD_ID \
AND B.BASSETT_ID = BR.BASSETT_ID AND VERSION.VERSION_ID = LINK.VERSION_ID AND ERESOURCE.ERESOURCE_ID = TYPE.ERESOURCE_ID \
AND TYPE = 'bassett'  AND BR.REGION = ? AND BR.SUB_REGION = ?  ORDER BY B.BASSETT_NUMBER

search=\
WITH FOUND AS ( SELECT TITLE, ERESOURCE.ERESOURCE_ID, ERESOURCE.RECORD_ID, SCORE(1) AS SCORE_TEXT, \
CONTAINS(TITLE,?) AS SCORE_TITLE FROM ERESOURCE  WHERE CONTAINS(TEXT,?,1) > 0) \
SELECT FOUND.ERESOURCE_ID, VERSION.VERSION_ID, LINK_ID, TYPE,  TITLE, PUBLISHER, HOLDINGS, \
PROXY, LABEL, URL, B.BASSETT_ID, B.BASSETT_NUMBER, B.IMAGE, B.DIAGRAM, B.LATIN_LEGEND, B.ENGLISH_LEGEND, B.DESCRIPTION AS BASSETT_DESCRIPTION, BR.REGION, BR.SUB_REGION,\
SCORE_TITLE, SCORE_TEXT, NLSSORT(TITLE,'NLS_SORT=GENERIC_BASELETTER') AS SORT_TITLE \
FROM FOUND, VERSION, LINK, TYPE, BASSETT B, BASSETT_REGION BR \
WHERE FOUND.ERESOURCE_ID = VERSION.ERESOURCE_ID   AND FOUND.RECORD_ID = B.RECORD_ID \
AND B.BASSETT_ID = BR.BASSETT_ID AND VERSION.VERSION_ID = LINK.VERSION_ID \
AND FOUND.ERESOURCE_ID = TYPE.ERESOURCE_ID(+) \
AND TYPE = 'bassett'  ORDER BY SCORE_TITLE DESC, SCORE_TEXT DESC, SORT_TITLE, VERSION_ID, LINK_ID

search.region=\
WITH FOUND AS ( SELECT TITLE, ERESOURCE.ERESOURCE_ID, ERESOURCE.RECORD_ID, SCORE(1) AS SCORE_TEXT, \
CONTAINS(TITLE,?) AS SCORE_TITLE FROM ERESOURCE  WHERE CONTAINS(TEXT,?,1) > 0) \
SELECT FOUND.ERESOURCE_ID, VERSION.VERSION_ID, LINK_ID, TYPE, TITLE, PUBLISHER, HOLDINGS, \
PROXY, LABEL, URL, B.BASSETT_ID, B.BASSETT_NUMBER, B.IMAGE, B.DIAGRAM, B.LATIN_LEGEND, BR.REGION, BR.SUB_REGION,\
SCORE_TITLE, SCORE_TEXT, NLSSORT(TITLE,'NLS_SORT=GENERIC_BASELETTER') AS SORT_TITLE \
FROM FOUND, VERSION, LINK, TYPE,  BASSETT B, BASSETT_REGION BR WHERE FOUND.ERESOURCE_ID = VERSION.ERESOURCE_ID   AND FOUND.RECORD_ID = B.RECORD_ID \
AND B.BASSETT_ID = BR.BASSETT_ID AND VERSION.VERSION_ID = LINK.VERSION_ID AND FOUND.ERESOURCE_ID = TYPE.ERESOURCE_ID(+) \
AND TYPE = 'bassett' AND BR.REGION = ? ORDER BY SCORE_TITLE DESC, SCORE_TEXT DESC, SORT_TITLE, VERSION_ID, LINK_ID

search.subregion=\
WITH FOUND AS ( SELECT TITLE, ERESOURCE.ERESOURCE_ID, ERESOURCE.RECORD_ID, SCORE(1) AS SCORE_TEXT, \
CONTAINS(TITLE,?) AS SCORE_TITLE FROM ERESOURCE  WHERE CONTAINS(TEXT,?,1) > 0) \
SELECT FOUND.ERESOURCE_ID, VERSION.VERSION_ID, LINK_ID, TYPE, TITLE, PUBLISHER, HOLDINGS, \
PROXY, LABEL, URL, B.BASSETT_ID, B.BASSETT_NUMBER, B.IMAGE, B.DIAGRAM, B.LATIN_LEGEND, BR.REGION, BR.SUB_REGION,\
SCORE_TITLE, SCORE_TEXT, NLSSORT(TITLE,'NLS_SORT=GENERIC_BASELETTER') AS SORT_TITLE \
FROM FOUND, VERSION, LINK, TYPE, BASSETT B, BASSETT_REGION BR \
WHERE FOUND.ERESOURCE_ID = VERSION.ERESOURCE_ID   AND FOUND.RECORD_ID = B.RECORD_ID \
AND B.BASSETT_ID = BR.BASSETT_ID AND VERSION.VERSION_ID = LINK.VERSION_ID \
AND FOUND.ERESOURCE_ID = TYPE.ERESOURCE_ID(+) \
AND TYPE = 'bassett'  AND BR.REGION = ? AND BR.SUB_REGION = ? ORDER BY SCORE_TITLE DESC, SCORE_TEXT DESC, SORT_TITLE, VERSION_ID, LINK_ID

search.number=\
SELECT ERESOURCE.ERESOURCE_ID, VERSION.VERSION_ID, LINK_ID, TYPE,  TITLE, PUBLISHER, HOLDINGS, \
PROXY, LABEL, URL, B.BASSETT_ID, B.BASSETT_NUMBER, B.IMAGE, B.DIAGRAM, B.LATIN_LEGEND, B.ENGLISH_LEGEND, B.DESCRIPTION AS BASSETT_DESCRIPTION, BR.REGION, BR.SUB_REGION \
FROM ERESOURCE, VERSION, LINK, TYPE,  BASSETT B, BASSETT_REGION BR WHERE ERESOURCE.ERESOURCE_ID = VERSION.ERESOURCE_ID   AND ERESOURCE.RECORD_ID = B.RECORD_ID \
AND B.BASSETT_ID = BR.BASSETT_ID AND VERSION.VERSION_ID = LINK.VERSION_ID AND ERESOURCE.ERESOURCE_ID = TYPE.ERESOURCE_ID \
AND TYPE = 'bassett'  AND B.BASSETT_NUMBER = ?

search.count=\
WITH FOUND AS ( SELECT TITLE, ERESOURCE.ERESOURCE_ID, ERESOURCE.RECORD_ID, SCORE(1) AS SCORE_TEXT, \
CONTAINS(TITLE,?) AS SCORE_TITLE FROM ERESOURCE  WHERE CONTAINS(TEXT,?,1) > 0) \
SELECT  br.region, br.sub_region, count(b.bassett_number) as SUB_REGION_COUNT \
FROM FOUND f,  BASSETT b , BASSETT_REGION br \
where f.record_id = b.record_id  and br.bassett_id = b.bassett_id group by  br.region, br.sub_region \
union all \
SELECT  br.region, '0' as SUB_REGION, count(distinct(b.bassett_number)) as SUB_REGION_COUNT \
FROM FOUND f,  BASSETT b , BASSETT_REGION br \
where f.record_id = b.record_id  and br.bassett_id = b.bassett_id group by  br.region order by 1,2
