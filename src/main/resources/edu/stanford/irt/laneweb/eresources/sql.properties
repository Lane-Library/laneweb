eresources.browse=\
SELECT ERESOURCE.ERESOURCE_ID, ERESOURCE.RECORD_TYPE, ERESOURCE.RECORD_ID, VERSION.VERSION_ID, LINK_ID, TITLE, PUBLISHER, \
HOLDINGS, DATES, VERSION.DESCRIPTION AS V_DESCRIPTION, DESCRIPTION.DESCRIPTION AS E_DESCRIPTION, LABEL, URL, INSTRUCTION, \
NLSSORT(TITLE,'NLS_SORT=GENERIC_BASELETTER') AS SORT_TITLE \
FROM ERESOURCE, VERSION, LINK, TYPE, DESCRIPTION \
WHERE ERESOURCE.ERESOURCE_ID = VERSION.ERESOURCE_ID \
AND VERSION.VERSION_ID = LINK.VERSION_ID \
AND ERESOURCE.ERESOURCE_ID = TYPE.ERESOURCE_ID \
AND ERESOURCE.ERESOURCE_ID = DESCRIPTION.ERESOURCE_ID(+) \
AND TYPE.TYPE = ? \
ORDER BY SORT_TITLE, VERSION_ID, LINK_ID

eresources.browse.alpha=\
SELECT ERESOURCE.ERESOURCE_ID, ERESOURCE.RECORD_TYPE, ERESOURCE.RECORD_ID, VERSION.VERSION_ID, LINK_ID, TITLE, PUBLISHER, \
HOLDINGS, DATES, VERSION.DESCRIPTION AS V_DESCRIPTION, DESCRIPTION.DESCRIPTION AS E_DESCRIPTION, LABEL, URL, INSTRUCTION, \
NLSSORT(TITLE,'NLS_SORT=GENERIC_BASELETTER') AS SORT_TITLE \
FROM ERESOURCE, VERSION, LINK, TYPE, DESCRIPTION \
WHERE ERESOURCE.ERESOURCE_ID = VERSION.ERESOURCE_ID \
AND VERSION.VERSION_ID = LINK.VERSION_ID \
AND ERESOURCE.ERESOURCE_ID = TYPE.ERESOURCE_ID \
AND ERESOURCE.ERESOURCE_ID = DESCRIPTION.ERESOURCE_ID(+) \
AND TYPE.TYPE = ? \
AND NLSSORT(SUBSTR(TITLE,1,1),'NLS_SORT=GENERIC_BASELETTER') = NLSSORT(?,'NLS_SORT=GENERIC_BASELETTER') \
ORDER BY SORT_TITLE, VERSION_ID, LINK_ID

eresources.browse.nonalpha=\
SELECT ERESOURCE.ERESOURCE_ID, ERESOURCE.RECORD_TYPE, ERESOURCE.RECORD_ID, VERSION.VERSION_ID, LINK_ID, TITLE, PUBLISHER, \
HOLDINGS, DATES, VERSION.DESCRIPTION AS V_DESCRIPTION, DESCRIPTION.DESCRIPTION AS E_DESCRIPTION, LABEL, URL, INSTRUCTION, \
NLSSORT(TITLE,'NLS_SORT=GENERIC_BASELETTER') AS SORT_TITLE \
FROM ERESOURCE, VERSION, LINK, TYPE, DESCRIPTION \
WHERE ERESOURCE.ERESOURCE_ID = VERSION.ERESOURCE_ID \
AND VERSION.VERSION_ID = LINK.VERSION_ID \
AND ERESOURCE.ERESOURCE_ID = TYPE.ERESOURCE_ID \
AND ERESOURCE.ERESOURCE_ID = DESCRIPTION.ERESOURCE_ID(+) \
AND TYPE.TYPE = ? \
AND (NLSSORT(SUBSTR(TITLE,1,1),'NLS_SORT=GENERIC_BASELETTER') < NLSSORT('A','NLS_SORT=GENERIC_BASELETTER') \
OR NLSSORT(SUBSTR(TITLE,1,1),'NLS_SORT=GENERIC_BASELETTER') > NLSSORT('z','NLS_SORT=GENERIC_BASELETTER')) \
ORDER BY SORT_TITLE, VERSION_ID, LINK_ID

eresources.browse.core=SELECT ERESOURCE.ERESOURCE_ID, ERESOURCE.RECORD_TYPE, ERESOURCE.RECORD_ID, VERSION.VERSION_ID, LINK_ID, TITLE, PUBLISHER, \
HOLDINGS, DATES, VERSION.DESCRIPTION AS V_DESCRIPTION, DESCRIPTION.DESCRIPTION AS E_DESCRIPTION, LABEL, URL, INSTRUCTION, \
NLSSORT(TITLE,'NLS_SORT=GENERIC_BASELETTER') AS SORT_TITLE \
FROM ERESOURCE, VERSION, LINK, TYPE, DESCRIPTION \
WHERE ERESOURCE.ERESOURCE_ID = VERSION.ERESOURCE_ID \
AND VERSION.VERSION_ID = LINK.VERSION_ID \
AND ERESOURCE.CORE = 'Y' \
AND ERESOURCE.ERESOURCE_ID = TYPE.ERESOURCE_ID \
AND ERESOURCE.ERESOURCE_ID = DESCRIPTION.ERESOURCE_ID(+) \
AND TYPE.TYPE = ? \
ORDER BY SORT_TITLE, VERSION_ID, LINK_ID

eresources.search.count.0=\
WITH FOUND AS (SELECT ERESOURCE.ERESOURCE_ID, TYPE.TYPE, SUBSET.SUBSET FROM ERESOURCE, TYPE, SUBSET \
WHERE CONTAINS(ERESOURCE.TEXT,?) > 0 \
AND ERESOURCE.ERESOURCE_ID = TYPE.ERESOURCE_ID \
AND ERESOURCE.ERESOURCE_ID = SUBSET.ERESOURCE_ID(+)) \
SELECT 'all' AS GENRE, COUNT(DISTINCT ERESOURCE_ID) AS HITS FROM FOUND

eresources.search.count.1=\
 UNION SELECT ? AS GENRE, COUNT(DISTINCT ERESOURCE_ID) AS HITS FROM FOUND WHERE TYPE = ?

eresources.browse.mesh=\
SELECT ERESOURCE.ERESOURCE_ID, ERESOURCE.RECORD_TYPE, ERESOURCE.RECORD_ID, VERSION.VERSION_ID, LINK_ID, TITLE, PUBLISHER, \
HOLDINGS, DATES, VERSION.DESCRIPTION AS V_DESCRIPTION, DESCRIPTION.DESCRIPTION AS E_DESCRIPTION, LABEL, URL, INSTRUCTION, \
NLSSORT(TITLE,'NLS_SORT=GENERIC_BASELETTER') AS SORT_TITLE \
FROM ERESOURCE, VERSION, LINK, MESH, TYPE, DESCRIPTION \
WHERE ERESOURCE.ERESOURCE_ID = VERSION.ERESOURCE_ID \
AND VERSION.VERSION_ID = LINK.VERSION_ID \
AND ERESOURCE.ERESOURCE_ID = DESCRIPTION.ERESOURCE_ID(+) \
AND ERESOURCE.ERESOURCE_ID = MESH.ERESOURCE_ID \
AND MESH.TERM = ? \
AND ERESOURCE.ERESOURCE_ID = TYPE.ERESOURCE_ID \
AND TYPE.TYPE = ? \
ORDER BY SORT_TITLE, VERSION_ID, LINK_ID

eresources.search=\
WITH FOUND AS ( \
SELECT TITLE, ERESOURCE_ID, RECORD_TYPE, RECORD_ID, CORE, SCORE(1) AS SCORE_TEXT, CONTAINS(TITLE,?) AS SCORE_TITLE \
FROM ERESOURCE \
WHERE CONTAINS(TEXT,?,1) > 0\
) \
SELECT FOUND.ERESOURCE_ID, RECORD_TYPE, RECORD_ID, CORE, YEAR, VERSION.VERSION_ID, LINK_ID, TYPE, SUBSET, TITLE, PUBLISHER, \
HOLDINGS, DATES, VERSION.DESCRIPTION AS V_DESCRIPTION, DESCRIPTION.DESCRIPTION AS E_DESCRIPTION, LABEL, URL, INSTRUCTION, \
SCORE_TITLE, SCORE_TEXT, NLSSORT(TITLE,'NLS_SORT=GENERIC_BASELETTER') AS SORT_TITLE \
FROM FOUND, VERSION, LINK, TYPE, SUBSET, DESCRIPTION, PUBLICATION_YEAR \
WHERE FOUND.ERESOURCE_ID = VERSION.ERESOURCE_ID \
AND VERSION.VERSION_ID = LINK.VERSION_ID \
AND FOUND.ERESOURCE_ID = DESCRIPTION.ERESOURCE_ID(+) \
AND FOUND.ERESOURCE_ID = PUBLICATION_YEAR.ERESOURCE_ID(+) \
AND FOUND.ERESOURCE_ID = TYPE.ERESOURCE_ID(+) \
AND VERSION.VERSION_ID = SUBSET.VERSION_ID(+) \
ORDER BY SCORE_TITLE DESC, SCORE_TEXT DESC, SORT_TITLE, VERSION_ID, LINK_ID

eresources.search.type=WITH FOUND AS ( \
SELECT TITLE, ERESOURCE_ID, RECORD_TYPE, RECORD_ID, CORE, SCORE(1) AS SCORE_TEXT, CONTAINS(TITLE,?) AS SCORE_TITLE \
FROM ERESOURCE \
WHERE CONTAINS(TEXT,?,1) > 0\
) \
SELECT FOUND.ERESOURCE_ID, RECORD_TYPE, RECORD_ID, CORE, YEAR, VERSION.VERSION_ID, LINK_ID, TYPE, SUBSET, TITLE, PUBLISHER, \
HOLDINGS, DATES,   VERSION.DESCRIPTION AS V_DESCRIPTION, DESCRIPTION.DESCRIPTION AS E_DESCRIPTION, LABEL, URL, INSTRUCTION, \
SCORE_TITLE, SCORE_TEXT, NLSSORT(TITLE,'NLS_SORT=GENERIC_BASELETTER') AS SORT_TITLE \
FROM FOUND, VERSION, LINK, TYPE, SUBSET, DESCRIPTION, PUBLICATION_YEAR \
WHERE FOUND.ERESOURCE_ID = VERSION.ERESOURCE_ID \
AND VERSION.VERSION_ID = LINK.VERSION_ID \
AND FOUND.ERESOURCE_ID = DESCRIPTION.ERESOURCE_ID(+) \
AND FOUND.ERESOURCE_ID = PUBLICATION_YEAR.ERESOURCE_ID(+) \
AND FOUND.ERESOURCE_ID = TYPE.ERESOURCE_ID(+) \
AND VERSION.VERSION_ID = SUBSET.VERSION_ID(+) \
AND TYPE = ? \
ORDER BY SCORE_TITLE DESC, SCORE_TEXT DESC, SORT_TITLE, VERSION_ID, LINK_ID

eresources.browse.subset=\
SELECT ERESOURCE.ERESOURCE_ID, RECORD_TYPE, RECORD_ID, VERSION.VERSION_ID, LINK_ID, TITLE, PUBLISHER, \
HOLDINGS, DATES, VERSION.DESCRIPTION AS V_DESCRIPTION, DESCRIPTION.DESCRIPTION AS E_DESCRIPTION, DESCRIPTION.DESCRIPTION AS E_DESCRIPTION, LABEL, URL, INSTRUCTION, \
NLSSORT(TITLE,'NLS_SORT=GENERIC_BASELETTER') AS SORT_TITLE \
FROM ERESOURCE, VERSION, LINK, SUBSET, DESCRIPTION \
WHERE ERESOURCE.ERESOURCE_ID = VERSION.ERESOURCE_ID \
AND VERSION.VERSION_ID = LINK.VERSION_ID \
AND VERSION.VERSION_ID = SUBSET.VERSION_ID \
AND ERESOURCE.ERESOURCE_ID = DESCRIPTION.ERESOURCE_ID(+) \
AND SUBSET.SUBSET = ? \
ORDER BY SORT_TITLE, VERSION_ID, LINK_ID