<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
    
    
    <bean id="org.apache.cocoon.Processor" class="edu.stanford.irt.laneweb.cocoon.TreeProcessor">
        <constructor-arg value="context://sitemap.xmap"/>
        <constructor-arg ref="org.apache.excalibur.source.SourceResolver"/>
        <constructor-arg ref="org.apache.avalon.framework.service.ServiceManager"/>
        <constructor-arg ref="org.apache.cocoon.configuration.Settings"/>
    </bean>
    
    <bean name="org.apache.cocoon.components.treeprocessor.TreeBuilder/sitemap-1.0"
        class="edu.stanford.irt.laneweb.cocoon.SitemapLanguage" scope="prototype">
        <constructor-arg ref="org.apache.avalon.framework.service.ServiceManager"/>
        <constructor-arg ref="org.apache.cocoon.components.pipeline.impl.PipelineComponentInfo"/>
    </bean>
    
    <bean name="org.apache.cocoon.acting.Action/invalidate-session"
        class="org.apache.cocoon.acting.SessionInvalidatorAction"/>
    <bean id="org.apache.excalibur.xmlizer.XMLizer"
        class="edu.stanford.irt.laneweb.cocoon.LanewebXMLizer"/>
    
    <bean name="org.apache.cocoon.matching.Matcher/wildcard"
        class="org.apache.cocoon.matching.WildcardURIMatcher"/>
        
    <bean name="org.apache.cocoon.matching.Matcher/url-decoding-wildcard"
        class="edu.stanford.irt.laneweb.cocoon.URLDecodingWildcardURIMatcher"/>
        
    <bean name="org.apache.cocoon.matching.Matcher/regexp"
        class="org.apache.cocoon.matching.RegexpURIMatcher"/>
    
    <bean name="org.apache.cocoon.matching.Matcher/regex-parameter"
        class="org.apache.cocoon.matching.RegexpRequestParameterMatcher"/>
    
    <bean id="org.apache.cocoon.components.notification.NotifyingBuilder"
        class="org.apache.cocoon.components.notification.DefaultNotifyingBuilder"/>
    
    <bean name="org.apache.cocoon.acting.Action/clear-cache"
        class="edu.stanford.irt.laneweb.cocoon.ClearCacheAction">
        <constructor-arg ref="org.apache.cocoon.caching.Cache"/>
    </bean>
    
    <bean name="org.apache.cocoon.selection.Selector/ipgroup"
        class="edu.stanford.irt.laneweb.cocoon.IPGroupSelector"
        scope="prototype">
        <property name="model" ref="edu.stanford.irt.laneweb.model.Model"/>
    </bean>
    
    <bean id="org.apache.cocoon.matching.MatcherSelector"
        class="org.apache.cocoon.core.container.spring.avalon.AvalonServiceSelector">
        <constructor-arg value="org.apache.cocoon.matching.Matcher"/>
    </bean>
    
    <bean id="org.apache.cocoon.acting.ActionSelector"
        class="org.apache.cocoon.core.container.spring.avalon.AvalonServiceSelector">
        <constructor-arg value="org.apache.cocoon.acting.Action"/>
    </bean>
    
    <bean id="org.apache.cocoon.selection.SelectorSelector"
        class="org.apache.cocoon.core.container.spring.avalon.AvalonServiceSelector">
        <constructor-arg value="org.apache.cocoon.selection.Selector"/>
    </bean>
    
    <bean name="sitemap"
        class="org.apache.cocoon.components.treeprocessor.sitemap.SitemapNodeBuilder"/>
    <bean name="pipelines"
        class="org.apache.cocoon.components.treeprocessor.sitemap.PipelinesNodeBuilder"/>
    <bean name="pipeline"
        class="org.apache.cocoon.components.treeprocessor.sitemap.PipelineNodeBuilder"
        scope="prototype"/>
    <bean name="match"
        class="org.apache.cocoon.components.treeprocessor.sitemap.MatchNodeBuilder"/>
    <bean name="mount"
        class="org.apache.cocoon.components.treeprocessor.sitemap.MountNodeBuilder"/>
    <bean name="read"
        class="org.apache.cocoon.components.treeprocessor.sitemap.ReadNodeBuilder"/>
    <bean name="generate"
        class="org.apache.cocoon.components.treeprocessor.sitemap.GenerateNodeBuilder"
        scope="prototype"/>
    <bean name="serialize"
        class="org.apache.cocoon.components.treeprocessor.sitemap.SerializeNodeBuilder"
        scope="prototype"/>
    <bean name="act"
        class="org.apache.cocoon.components.treeprocessor.sitemap.ActNodeBuilder"
        scope="prototype"/>
    <bean name="aggregate"
        class="org.apache.cocoon.components.treeprocessor.sitemap.AggregateNodeBuilder"
        scope="prototype"/>
    <bean name="redirect-to"
        class="org.apache.cocoon.components.treeprocessor.sitemap.RedirectToNodeBuilder"
        scope="prototype"/>
    <bean name="transform"
        class="org.apache.cocoon.components.treeprocessor.sitemap.TransformNodeBuilder"
        scope="prototype"/>
    <bean name="select"
        class="org.apache.cocoon.components.treeprocessor.sitemap.SelectNodeBuilder"
        scope="prototype"/>
    <bean name="handle-errors"
        class="org.apache.cocoon.components.treeprocessor.sitemap.HandleErrorsNodeBuilder"/>
    <bean name="org.apache.cocoon.el.parsing.StringTemplateParser/legacySitemap"
        class="org.apache.cocoon.components.treeprocessor.variables.LegacySitemapStringTemplateParser">
        <property name="serviceManager" ref="org.apache.avalon.framework.service.ServiceManager"/>
    </bean>
    <bean id="org.apache.cocoon.components.treeprocessor.variables.VariableResolver"
        class="org.apache.cocoon.components.treeprocessor.variables.StringTemplateParserVariableResolver"
        scope="prototype">
        <property name="stringTemplateParser" ref="org.apache.cocoon.el.parsing.StringTemplateParser/legacySitemap"/>
        <property name="objectModel" ref="org.apache.cocoon.el.objectmodel.ObjectModel"/>
    </bean>

</beans>