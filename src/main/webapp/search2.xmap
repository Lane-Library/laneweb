<?xml version="1.0" encoding="UTF-8"?>
<!-- this is the live search.xmap -->
<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://apache.org/cocoon/sitemap/1.0 http://cocoon.apache.org/schema/sitemap/cocoon-sitemap-1.0.xsd">
    <map:pipelines>
        <map:pipeline type="noncaching">
            <!-- search.xmap depends on applications.xmap and eresources.xmap -->
            <map:match pattern="apps/**" type="wildcard">
                <map:mount uri-prefix="apps" check-reload="no" src="applications.xmap"/>
            </map:match>
            <map:match pattern="eresources" type="wildcard">
                <map:mount uri-prefix="eresources" check-reload="no" src="eresources.xmap"/>
            </map:match>
            <map:match pattern="search2.html" type="wildcard">
                <!-- original metasearch sources -->
                <map:match type="regex-parameter"
                    pattern="^(clinical|peds|research|pharmacy|history|test|textbooks)$">
                    <map:parameter name="parameter-name" value="source"/>
                    <map:aggregate element="doc">
                        <map:part src="cocoon:/apps/search/proxy/xml"/>
                        <map:part src="cocoon:/cached/search/{request-param:source}.html"/>
                    </map:aggregate>
                    <map:transform type="xinclude"/>
                    <map:transform type="saxon" src="context://xsl/metasearch.xsl">
                        <map:parameter name="query-string" value="{request:queryString}"/>
                        <map:parameter name="source" value="{request-param:source}"/>
                    </map:transform>
                    <map:serialize type="xml"/>
                </map:match>
                <!-- eresources search pages (parameter is all, ej, book, etc)-->
                <map:match type="regex-parameter" pattern="^.+$">
                    <map:parameter name="parameter-name" value="source"/>
                    <map:aggregate element="doc">
                        <map:part src="cocoon:/eresources/count"/>
                        <map:part src="cocoon:/cached/search2.html"/>
                        <map:part src="cocoon:/cached/search2/{request-param:source}.html"/>
                    </map:aggregate>
                    <map:transform type="xinclude"/>
                    <map:transform type="saxon" src="context://xsl/search2.xsl">
                        <map:parameter name="q" value="{request-param:q}"/>
                        <map:parameter name="source" value="{request-param:source}"/>
                    </map:transform>
                    <map:transform type="saxon" src="context://xsl/search-post.xsl"/>
                    <map:serialize type="xml"/>
                </map:match>
                <map:match pattern="search2.html" type="wildcard">
                    <map:generate type="html" src="{naming:java:comp/env/live-base}/content/error.html"/>
                    <map:serialize type="xml"/>
                </map:match>
            </map:match>
            <!-- ajax requests for the tab results uses this, so does the aggregate in the previous match -->
            <map:match pattern="search2/*.html" type="wildcard">
                <map:generate src="cocoon:/cached/search2/{1}.html" type="file"/>
                <map:transform type="saxon" src="context://xsl/search2.xsl">
                    <map:parameter name="q" value="{request-param:q}"/>
                    <map:parameter name="source" value="{request-param:source}"/>
                </map:transform>
                <map:transform type="xinclude"/>
                <map:transform type="saxon" src="context://xsl/search-post.xsl"/>
                <map:serialize type="xml"/>
            </map:match>
        </map:pipeline>
        <!-- static documents cached and accessed via html generator -->
        <map:pipeline type="caching">
            <map:match pattern="cached/**" type="wildcard">
                <map:generate src="{naming:java:comp/env/live-base}/content/{1}" type="html"/>
                <map:serialize type="xml"/>
            </map:match>
            <!-- pass any unresolved urls (eg from xinclude) to content.xmap -->
            <map:match pattern="**" type="wildcard">
                <map:mount uri-prefix="" check-reload="no" src="content.xmap"/>
            </map:match>
        </map:pipeline>
    </map:pipelines>
</map:sitemap>
